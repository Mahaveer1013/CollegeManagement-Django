# Generated by Django 5.0.7 on 2024-07-23 13:52

import django.db.models.deletion
import django.utils.timezone
import main_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period', models.PositiveIntegerField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Absent'), (1, 'Present'), (2, 'On Duty Internal'), (3, 'On Duty External'), (4, 'Pending')], default=4)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BloomKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=120)),
                ('bloom_level', models.CharField(choices=[('1', 'Creating'), ('2', 'Evaluate'), ('3', 'Analyzing'), ('4', 'Applying'), ('5', 'Understanding'), ('6', 'Remember')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('subject_code', models.CharField(max_length=10, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('1', 'HOD'), ('2', 'Staff'), ('3', 'Student')], default=1, max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('profile_pic', models.ImageField(upload_to='')),
                ('address', models.TextField()),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClassList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('1', '1st'), ('2', '2nd'), ('3', '3rd'), ('4', '4th'), ('5', '5th'), ('6', '6th'), ('7', '7th'), ('8', '8th')], max_length=1)),
                ('section', models.CharField(max_length=100)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='Examdetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('1', '1st'), ('2', '2nd'), ('3', '3rd'), ('4', '4th'), ('5', '5th'), ('6', '6th'), ('7', '7th'), ('8', '8th')], max_length=1)),
                ('exam_date', models.DateField()),
                ('exam_type', models.CharField(choices=[('1', 'Internal Assesment 1'), ('2', 'Internal Assesment 2'), ('3', 'Semester Examination')], max_length=1)),
                ('academic_year', models.CharField(max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.classlist')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='assignments/questions')),
                ('deadline_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.classlist')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.period')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('unit_no', models.IntegerField()),
                ('mark', models.CharField(choices=[('1', '2 Mark'), ('2', '13 Mark'), ('3', '15 mark')], max_length=1)),
                ('course_outcome', models.CharField(max_length=10)),
                ('bloom_level', models.CharField(max_length=50)),
                ('exam_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.examdetail')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
            ],
        ),
        migrations.AddField(
            model_name='period',
            name='staff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.staff'),
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_number', models.CharField(max_length=100, unique=True)),
                ('roll_number', models.CharField(max_length=100, unique=True)),
                ('dob', models.DateField(default=None, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('class_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.classlist')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.attendance')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.student')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='main_app.student'),
        ),
        migrations.CreateModel(
            name='AssignmentAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='assignments/answers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.assignmentquestions')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.FloatField(default=0)),
                ('exam', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
        ),
        migrations.AddField(
            model_name='period',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.subject'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendances', to='main_app.subject'),
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.classlist')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
                ('friday_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_1', to='main_app.period')),
                ('friday_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_2', to='main_app.period')),
                ('friday_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_3', to='main_app.period')),
                ('friday_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_4', to='main_app.period')),
                ('friday_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_5', to='main_app.period')),
                ('friday_6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_6', to='main_app.period')),
                ('friday_7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_7', to='main_app.period')),
                ('friday_8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friday_8', to='main_app.period')),
                ('monday_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_1', to='main_app.period')),
                ('monday_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_2', to='main_app.period')),
                ('monday_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_3', to='main_app.period')),
                ('monday_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_4', to='main_app.period')),
                ('monday_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_5', to='main_app.period')),
                ('monday_6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_6', to='main_app.period')),
                ('monday_7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_7', to='main_app.period')),
                ('monday_8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monday_8', to='main_app.period')),
                ('thursday_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_1', to='main_app.period')),
                ('thursday_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_2', to='main_app.period')),
                ('thursday_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_3', to='main_app.period')),
                ('thursday_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_4', to='main_app.period')),
                ('thursday_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_5', to='main_app.period')),
                ('thursday_6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_6', to='main_app.period')),
                ('thursday_7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_7', to='main_app.period')),
                ('thursday_8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thursday_8', to='main_app.period')),
                ('tuesday_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_1', to='main_app.period')),
                ('tuesday_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_2', to='main_app.period')),
                ('tuesday_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_3', to='main_app.period')),
                ('tuesday_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_4', to='main_app.period')),
                ('tuesday_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_5', to='main_app.period')),
                ('tuesday_6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_6', to='main_app.period')),
                ('tuesday_7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_7', to='main_app.period')),
                ('tuesday_8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuesday_8', to='main_app.period')),
                ('wednesday_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_1', to='main_app.period')),
                ('wednesday_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_2', to='main_app.period')),
                ('wednesday_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_3', to='main_app.period')),
                ('wednesday_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_4', to='main_app.period')),
                ('wednesday_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_5', to='main_app.period')),
                ('wednesday_6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_6', to='main_app.period')),
                ('wednesday_7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_7', to='main_app.period')),
                ('wednesday_8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wednesday_8', to='main_app.period')),
            ],
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['student', 'date'], name='main_app_at_student_5075f1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'date', 'period')},
        ),
    ]
